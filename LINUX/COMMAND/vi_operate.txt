vi与vim编辑命令的使用
https://www.runoob.com/linux/linux-vim.html


基本知识
vi与vim下，分为三种命令模式
    1、插入模式
        只有在Insert mode下，才可以做文字输入，按「ESC」键可回到命令行模式
    2、命令模式
        控制屏幕光标的移动，字符、字或行的删除，移动复制某区段及进入Insert mode下，或者到 last line mode
    3、末行模式
        将文件保存或退出vi，也可以设置编辑环境，如寻找字符串、列出行号……等

vi filename;
vi +number filename;            打开文件并使光标在number行

插入模式下：


命令模式下：
    ctrl +「r」 或者 单独的「u」键: 
        「u」      类似 ctrl + z
        ctrl + r   类似 ctrl + y
    小数点.: 重复前面一个的动作
    cw :  删除一个字（不是字符）并进入插入模式
    光标移动
        vi可以直接用键盘上的光标来上下左右移动，但正规的vi是用小写英文字母「h」、「j」、「k」、「l」，分别控制光标左、下、上、右移一格。 
        「ctrl」+「b」：光标往"上"移动一页
        「ctrl」+「f」：光标往"下"移动一页
        「ctrl」+「u」：光标往"上"移动半页
        「ctrl」+「d」：光标往"下"移动半页
        「G」：移动到文章的最后
        「#l」：光标移到该行的第#个位置，如：5l,56l
        「ctrl」+「g」列出光标所在行的行号以及其他信息
        number + 方向键 向方向键所表示的方向移动number行|字符
        number + space  向后移动number个字符
        0 | HOME键 ： 移动光标到当前行的开头
        $ | END键  ： 移动光标到当前行的最后
        number + G ： 移动到第number行 类似于 末行模式的 :number
        gg：  移动光标到文章开头
        number + enter: 光标向下移动number行，相当于 number + ↓ 或者 number + j
    删除文字
        「x」：每按一次，删除光标所在位置的"后面"一个字符。           类似 delete
        「nx」：例如，「6x」表示删除光标所在位置的"后面"6个字符。
        「X」：大写的X，每按一次，删除光标所在位置的"前面"一个字符。  类似 backspace
        「nX」：例如，「20X」表示删除光标所在位置的"前面"20个字符。 
        「dd」：剪切光标所在行。 
        「#dd」：从光标所在行开始剪切#行
        dG : 删除光标行到最后一行数据
        d1G: 删除光标到第一行数据
        d0: 删除光标到行首数据
        d$: 删除光标到行尾数据
        number + c + 方向： 从光标向指定方向删除number行或者个字符
        J ： 相当于在行首退格，将下一行数据放在本行末尾
    复制 
        「yw」：将光标所在之处到字尾的字符复制到缓冲区中 并不是到行尾，而是到类似空格的地方停止
        「yy」：复制光标所在行到缓冲区
            y0: 复制光标到行首的数据
            y$: 复制光标到行尾的数据
        「#yy」：例如，「6yy」表示拷贝从光标所在的该行"往下数"6行文字
        「p」：将缓冲区内的字符贴到光标所在位置。注意：所有与"y"有关的复制命令都必须与"p"配合才能完成复制与粘贴功能
        p|P: 粘贴，P粘贴到光标前，p粘贴到光标后



末行模式下：
    :![command]      ->     如果后面跟了一个命令，表示强制退出并执行命令，但是该命令的退出并不是退出编辑，只是暂时退出
    :q      ->      退出
    :wq     ->      保存并退出
    :w [filename]   ->  另存为filename
        :n1,n2 w [filename]	将 n1 到 n2 的内容储存成 filename 这个档案。
    :r [filename]	在编辑的数据中，读入另一个档案的数据。亦即将 『filename』 这个档案内容加到游标所在行后面
    :q!     ->      强制退出
    :wq!    ->      强制保存并退出
    :num    ->      光标移动到num行
    :set nu ->      列出行号
    :set nonu       取消行号显示
    ?string     查找string  配合「N」键可以查找另外符合条件的string
    /string     与?string一样的用法
    ? 与 / 的区别： / 从光标向下寻找，?: 从光标向上寻找
    eg: 
        100,200s/word1/word2/g      在第 100 与 200 行之间寻找 word1 这个字符串，并将该字符串取代为 word2
    上面这两个命令可以在命令模式下使用，也可以在末行模式下使用
        命令模式下：直接查找符合条件的字符，光标在符合条件的字符前
        末行模式下：查找符合条件的字符所在的行，光标在该行行首
    下面两个命令都可以限定范围 :100,200s/word1/word2/g
    :s/ps_ENV/ps_env/g      ->   查找当前文件，并替换ps_ENV为ps_env
    :s/ps_ENV/ps_env/gc     ->   查找当前文件，并替换ps_ENV为ps_env，与上面不同，当有需要替换的时候，会有提示
