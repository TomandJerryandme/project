*
{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}
body
{
    /* visibility与display的区别
    display: none 时，元素隐藏并且不占位置
    visibility: hidden(visible), 元素隐藏但是占据本来的位置
    */
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 100%;
    background: #eaeef0;
}
.loader
{
    position: relative;
    display: flex;
}
.loader span
{
    position: relative;
    width: 50px;
    height: 50px;
    background: #eaeef0;
    margin: 0 10px;
    /* 使元素呈现为圆形 */
    border-radius: 50%;
    /* border这里的设置-生成了同心圆的内部圆形 */
    border: 6px solid #eaeef0;
    /* 设置了多层的阴影效果，前两个是外部阴影，后面两个是内部阴影 */
    box-shadow: -8px -8px 15px rgba(255, 255, 255, 1),
    8px 8px 15px rgba(0, 0, 0, 0.2),
    inset 3px 3px 5px rgba(0, 0, 0, 0.1),
    inset -1px -1px 5px rgba(255, 255, 255, 1);
}
/* 注意： 单冒号(:)用于CSS3伪类，双冒号(::)用于CSS3伪元素 
::after或者::before用于给元素添加额外内容
伪类用于在页面中的元素处于某个状态时，为其添加指定的样式 eg: a:hover
伪元素会创建一个抽象的伪元素，这个元素不是DOM中的真实元素，但是会存在于最终的渲染树中，我们可以为其添加样式
*/
.loader span::before
{
    /* 表现形式为： 在内层添加一个有颜色的圆形，并赋予动画效果 */
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: #5c89ff;
    /* border-radius： 最大值为50% 50%以上都是呈现圆形 可以设置为： border-radius: 左上角，右上角，右下角，左下角 */
    border-radius: 50%;
    box-shadow: inset 3px 3px 5px rgba(0, 0, 0, 0.1),
    inset -1px -1px 5px rgba(255, 255, 255, 1);
    transform: scale(0);
    animation: animate 3.5s linear infinite, animateColor 5s linear infinite;
    animation-delay: calc(var(--i) * 0.2s);
}
@keyframes animate
{
    0%,9.99%,60.001%
    /* 这里的参数与下方的参数组合形成 0-100% 也就是该动画的全部时间
    0-9.99, 10-70, 70.001-100 */
    {
        /* scale(x, y) : x方向放大x倍，y轴方向放大y倍
            scaleX(x): x方向放大
            scaleY(y)：y方向放大
        */
        transform: scale(0);
    }
    10%,60%
    {
        /* 在动画演出的10%-60%的时间内，动画使用元素的大小为原来的1倍 */
        transform: scale(1);
    }
}

@keyframes animateColor
{
    0%
    {
        /* 滤镜属性： 色相旋转，其中，0-360指的是在色相圆环中对应的角度
        注：色相即为颜色 */
        filter: hue-rotate(0deg);
    }
    100%
    {
        filter: hue-rotate(360deg);
    }
}
/* 
滤镜filter的使用
语法 filter: none | blur() | brightness() | contrast() | drop-shadow() | grayscale() | hue-rotate() | invert() | opacity() | saturate() | sepia() | url();
none	默认值，没有效果。
blur(px)
    给图像设置高斯模糊。
    "radius"一值设定高斯函数的标准差，或者是屏幕上以多少像素融在一起， 所以值越大越模糊。
    如果没有设定值，则默认是0。
    这个参数可设置css长度值，但不接受百分比值。
brightness(%)
    给图片应用一种线性乘法，使其看起来更亮或更暗。
    如果值是0%，图像会全黑。值是100%，则图像无变化。
    其他的值对应线性乘数效果。
    值超过100%也是可以的，图像会比原来更亮。如果没有设定值，默认是1。
contrast(%)
    调整图像的对比度。值是0%的话，图像会全黑。值是100%，图像不变。值可以超过100%，意味着会运用更低的对比。若没有设置值，默认是1。
drop-shadow(h-shadow v-shadow blur spread color)
    给图像设置一个阴影效果。阴影是合成在图像下面，可以有模糊度的，可以以特定颜色画出的遮罩图的偏移版本。 
    函数接受<shadow>(在CSS3背景中定义)类型的值，除了"inset"关键字是不允许的。
    该函数与已有的box-shadow box-shadow属性很相似
    不同之处在于，通过滤镜，一些浏览器为了更好的性能会提供硬件加速。
    <shadow>参数如下：
        <offset-x> <offset-y> (必须)
        这是设置阴影偏移量的两个 <length>值. 
        <offset-x> 设定水平方向距离. 负值会使阴影出现在元素左边. 
        <offset-y>设定垂直距离.负值会使阴影出现在元素上方。
        如果两个值都是0, 则阴影出现在元素正后面 (如果设置了 <blur-radius> and/or <spread-radius>，会有模糊效果).
        <blur-radius> (可选)
        这是第三个code><length>值. 值越大，越模糊，则阴影会变得更大更淡.
        不允许负值 若未设定，默认是0 (则阴影的边界很锐利).
        <spread-radius> (可选)
        这是第四个 <length>值. 
        正值会使阴影扩张和变大，负值会是阴影缩小.
        若未设定，默认是0 (阴影会与元素一样大小).
        <color> (可选)
        若未设定，颜色值基于浏览器。
grayscale(%)	
    将图像转换为灰度图像。值定义转换的比例。
    值为100%则完全转为灰度图像，值为0%图像无变化。
    若未设置，值默认是0；

hue-rotate(deg)	
    给图像应用色相旋转。"angle"一值设定图像会被调整的色环角度值。
    值为0deg，则图像无变化。
    若值未设置，默认值是0deg。
    该值虽然没有最大值，超过360deg的值相当于又绕一圈。

invert(%)	
    反转输入图像。值定义转换的比例。
    100%的价值是完全反转。值为0%则图像无变化。
     若值未设置，值默认是0。

opacity(%)	
    转化图像的透明程度。值定义转换的比例。
    值为0%则是完全透明，值为100%则图像无变化。
    值在0%和100%之间，则相当于图像样本乘以数量。 
    若值未设置，值默认是1。
    该函数与已有的opacity属性很相似，不同之处在于通过filter，一些浏览器为了提升性能会提供硬件加速。

saturate(%)	
    转换图像饱和度。值定义转换的比例。
    值为0%则是完全不饱和，值为100%则图像无变化。
    超过100%的值是允许的，则有更高的饱和度。 
    若值未设置，值默认是1。

sepia(%)	
    将图像转换为深褐色。值定义转换的比例。
    值为100%则完全是深褐色的，值为0%图像无变化。
    若未设置，值默认是0；

url()	
    URL函数接受一个XML文件，该文件设置了 一个SVG滤镜，且可以包含一个锚点来指定一个具体的滤镜元素。
    例如：filter: url(svg-url#element-id)
*/